{"ast":null,"code":"var _jsxFileName = \"/home/ravindra/Desktop/ravindra/interview/src/components/ChangeBoxColor/index.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './changebox.css';\nimport { useParams } from 'react-router-dom';\nimport { problemList } from '../../shared/data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChangeBoxColor = () => {\n  _s();\n  const [boxStates, setBoxStates] = useState(Array(7).fill('yellow'));\n  const [orderClickBox, setOrderClickBox] = useState([]);\n  const [problems, setProblems] = useState(null);\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    if (id) {\n      const getProblem = problemList.filter(item => item.title === id);\n      if (getProblem.length > 0) {\n        setTimeout(() => {\n          setProblems(getProblem[0]);\n        }, 3000);\n      } else {\n        setProblems(null);\n      }\n    }\n  }, [id]);\n  const handleBoxClick = index => {\n    const newBoxStates = [...boxStates];\n    newBoxStates[index] = newBoxStates[index] === 'yellow' ? 'green' : 'yellow';\n    setBoxStates(newBoxStates);\n    setOrderClickBox([...orderClickBox, index]);\n  };\n  const resetBoxState = async () => {\n    for (let index of orderClickBox) {\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      boxStates[index] = 'yellow';\n      setBoxStates([...boxStates]);\n    }\n    setOrderClickBox([]);\n  };\n  useEffect(() => {\n    const isAllGreen = boxStates.every(color => color === 'green');\n    if (isAllGreen) {\n      resetBoxState();\n    }\n  }, [boxStates]);\n  return problems !== null ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center pt-4\",\n      children: \"Change Box Color\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-center\",\n      children: \"Click on the box \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"containerr\",\n      style: {\n        display: 'flex',\n        justifyContent: 'space-around'\n      },\n      children: boxStates.map((color, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        // className={`box ${color}`}\n        style: {\n          backgroundColor: color,\n          width: '100px',\n          height: '100px',\n          margin: '10px',\n          cursor: 'pointer'\n        },\n        onClick: () => handleBoxClick(index)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 7\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"spinner-grow\",\n    role: \"status\",\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"visually-hidden\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n};\n_s(ChangeBoxColor, \"X9Nv8fvmXFXvWg1+yJ+LVEIxJsc=\", false, function () {\n  return [useParams];\n});\n_c = ChangeBoxColor;\nexport default ChangeBoxColor;\nvar _c;\n$RefreshReg$(_c, \"ChangeBoxColor\");","map":{"version":3,"names":["React","useEffect","useState","useParams","problemList","jsxDEV","_jsxDEV","ChangeBoxColor","_s","boxStates","setBoxStates","Array","fill","orderClickBox","setOrderClickBox","problems","setProblems","id","getProblem","filter","item","title","length","setTimeout","handleBoxClick","index","newBoxStates","resetBoxState","Promise","resolve","isAllGreen","every","color","children","className","fileName","_jsxFileName","lineNumber","columnNumber","style","display","justifyContent","map","backgroundColor","width","height","margin","cursor","onClick","role","_c","$RefreshReg$"],"sources":["/home/ravindra/Desktop/ravindra/interview/src/components/ChangeBoxColor/index.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport './changebox.css'\nimport { useParams } from 'react-router-dom';\nimport { problemList } from '../../shared/data';\n\nconst ChangeBoxColor = () => {\n  const [boxStates, setBoxStates] = useState(Array(7).fill('yellow'));\n  const [orderClickBox, setOrderClickBox] = useState([])\n  const [problems, setProblems] = useState(null);\n  const { id } = useParams()\n\n  useEffect(() => {\n    if (id) {\n      const getProblem = problemList.filter((item) => item.title === id)\n      if (getProblem.length > 0) {\n        setTimeout(() => {\n          setProblems(getProblem[0])\n        }, 3000);\n\n      } else {\n        setProblems(null)\n      }\n    }\n  }, [id]);\n\n\n  const handleBoxClick = (index) => {\n    const newBoxStates = [...boxStates];\n    newBoxStates[index] = newBoxStates[index] === 'yellow' ? 'green' : 'yellow';\n    setBoxStates(newBoxStates);\n    setOrderClickBox([...orderClickBox, index]);\n  }\n\n  const resetBoxState = async () => {\n    for (let index of orderClickBox) {\n      await new Promise((resolve) => setTimeout(resolve, 1000));\n      boxStates[index] = 'yellow';\n      setBoxStates([...boxStates]);\n    }\n    setOrderClickBox([])\n  }\n\n  useEffect(() => {\n    const isAllGreen = boxStates.every((color) => color === 'green');\n    if (isAllGreen) {\n      resetBoxState();\n    }\n\n  }, [boxStates])\n\n\n  return (\n    problems !== null ?\n      <div>\n        <h2 className='text-center pt-4'>Change Box Color</h2>\n        <p className='text-center'>Click on the box </p>\n        <div className=\"containerr\" style={{ display: 'flex', justifyContent: 'space-around' }}>\n          {boxStates.map((color, index) => (\n            <div\n              key={index}\n              // className={`box ${color}`}\n              style={{\n                backgroundColor: color,\n                width: '100px',\n                height: '100px',\n                margin: '10px',\n                cursor: 'pointer',\n              }}\n              onClick={() => handleBoxClick(index)}\n            ></div>\n          ))}\n        </div>\n      </div>\n      : <div className=\"spinner-grow\" role=\"status\">\n        <span className=\"visually-hidden\">Loading...</span>\n      </div>\n  )\n}\n\nexport default ChangeBoxColor"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,iBAAiB;AACxB,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,WAAW,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAACS,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,QAAQ,CAAC,CAAC;EACnE,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM;IAAEe;EAAG,CAAC,GAAGd,SAAS,CAAC,CAAC;EAE1BF,SAAS,CAAC,MAAM;IACd,IAAIgB,EAAE,EAAE;MACN,MAAMC,UAAU,GAAGd,WAAW,CAACe,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,KAAK,KAAKJ,EAAE,CAAC;MAClE,IAAIC,UAAU,CAACI,MAAM,GAAG,CAAC,EAAE;QACzBC,UAAU,CAAC,MAAM;UACfP,WAAW,CAACE,UAAU,CAAC,CAAC,CAAC,CAAC;QAC5B,CAAC,EAAE,IAAI,CAAC;MAEV,CAAC,MAAM;QACLF,WAAW,CAAC,IAAI,CAAC;MACnB;IACF;EACF,CAAC,EAAE,CAACC,EAAE,CAAC,CAAC;EAGR,MAAMO,cAAc,GAAIC,KAAK,IAAK;IAChC,MAAMC,YAAY,GAAG,CAAC,GAAGjB,SAAS,CAAC;IACnCiB,YAAY,CAACD,KAAK,CAAC,GAAGC,YAAY,CAACD,KAAK,CAAC,KAAK,QAAQ,GAAG,OAAO,GAAG,QAAQ;IAC3Ef,YAAY,CAACgB,YAAY,CAAC;IAC1BZ,gBAAgB,CAAC,CAAC,GAAGD,aAAa,EAAEY,KAAK,CAAC,CAAC;EAC7C,CAAC;EAED,MAAME,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,KAAK,IAAIF,KAAK,IAAIZ,aAAa,EAAE;MAC/B,MAAM,IAAIe,OAAO,CAAEC,OAAO,IAAKN,UAAU,CAACM,OAAO,EAAE,IAAI,CAAC,CAAC;MACzDpB,SAAS,CAACgB,KAAK,CAAC,GAAG,QAAQ;MAC3Bf,YAAY,CAAC,CAAC,GAAGD,SAAS,CAAC,CAAC;IAC9B;IACAK,gBAAgB,CAAC,EAAE,CAAC;EACtB,CAAC;EAEDb,SAAS,CAAC,MAAM;IACd,MAAM6B,UAAU,GAAGrB,SAAS,CAACsB,KAAK,CAAEC,KAAK,IAAKA,KAAK,KAAK,OAAO,CAAC;IAChE,IAAIF,UAAU,EAAE;MACdH,aAAa,CAAC,CAAC;IACjB;EAEF,CAAC,EAAE,CAAClB,SAAS,CAAC,CAAC;EAGf,OACEM,QAAQ,KAAK,IAAI,gBACfT,OAAA;IAAA2B,QAAA,gBACE3B,OAAA;MAAI4B,SAAS,EAAC,kBAAkB;MAAAD,QAAA,EAAC;IAAgB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtDhC,OAAA;MAAG4B,SAAS,EAAC,aAAa;MAAAD,QAAA,EAAC;IAAiB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAChDhC,OAAA;MAAK4B,SAAS,EAAC,YAAY;MAACK,KAAK,EAAE;QAAEC,OAAO,EAAE,MAAM;QAAEC,cAAc,EAAE;MAAe,CAAE;MAAAR,QAAA,EACpFxB,SAAS,CAACiC,GAAG,CAAC,CAACV,KAAK,EAAEP,KAAK,kBAC1BnB,OAAA;QAEE;QACAiC,KAAK,EAAE;UACLI,eAAe,EAAEX,KAAK;UACtBY,KAAK,EAAE,OAAO;UACdC,MAAM,EAAE,OAAO;UACfC,MAAM,EAAE,MAAM;UACdC,MAAM,EAAE;QACV,CAAE;QACFC,OAAO,EAAEA,CAAA,KAAMxB,cAAc,CAACC,KAAK;MAAE,GAThCA,KAAK;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAUN,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC,gBACJhC,OAAA;IAAK4B,SAAS,EAAC,cAAc;IAACe,IAAI,EAAC,QAAQ;IAAAhB,QAAA,eAC3C3B,OAAA;MAAM4B,SAAS,EAAC,iBAAiB;MAAAD,QAAA,EAAC;IAAU;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChD,CAAC;AAEZ,CAAC;AAAA9B,EAAA,CAxEKD,cAAc;EAAA,QAIHJ,SAAS;AAAA;AAAA+C,EAAA,GAJpB3C,cAAc;AA0EpB,eAAeA,cAAc;AAAA,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}